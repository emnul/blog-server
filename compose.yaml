services:
  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  reverse-proxy:
    image: traefik:v3.3
    # Enables the web UI and tells Traefik to listen to docker
    command:
      # LetsEncrypt configs
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=esolis6114@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # Redirect HTTP (80) requests to HTTPS (443)
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      # The HTTP port
      - "80:80"
      # when using the TLS-ALPN-01 challenge, Traefik must be reachable by Let's Encrypt through port 443.
      - "443:443"
    volumes:
      - letsencrypt:/letsencrypt
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  blog-server:
    image: ghcr.io/emnul/blog-server:prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blog-server.rule=Host(`emnul.dev`)"
      - "traefik.http.routers.blog-server.entrypoints=websecure"
      - "traefik.http.routers.blog-server.tls.certresolver=myresolver"
      # enable watchtower to monitor blog-server
      - "com.centurylinklabs.watchtower.enable=true"
    # Run 3 instances of blog-server for improved reliability through increased availability
    # Improves UX in case one of the instances panics
    deploy:
      mode: replicated
      replicas: 3
    restart: always
volumes:
  letsencrypt:
